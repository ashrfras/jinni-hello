ئعلن نصية.ئحشنهاية (عدد طولهدف، نصية نصحشو = ' ') ك نصية:
	يختصر padEnd؛
تم
ئعلن نصية.ردموضع (منوع عنصربحت، عدد ئبدئمن = 0) ك عدد:
	يختصر indexOf؛
تم
ئعلن نصية (منوع مدخ؟):
	يختصر String؛
	يملك عدد طول يختصر length؛
تم
ئعلن نصية.ئلاحرفكبير () ك نصية:
	يختصر toUpperCase؛
تم
ئعلن نصية.قارنمئقلم (نصية قارنمع) ك عدد:
	يختصر localeCompare؛
تم
ئعلن نصية.قللم () ك نصية:
	يختصر trim؛
تم
ئعلن نصية.طابق (رجكس رجك) ك نصية[]:
	يختصر match؛
تم
ئعلن نصية.قسسم (نصية فاصل، عدد ئقصا = عدم) ك نصية[]:
	يختصر split؛
تم
ئعلن نصية.عووضكل (نصية مستبدل، نصية بديل) ك نصية:
	يختصر replaceAll؛
تم
ئعلن نصية.ئستقطع (عدد بداية، عدد طول = عدم) ك نصية:
	يختصر substr؛
تم
ئعلن نصية.عووضكلرجكس (رجكس مستبدل، نصية بديل) ك نصية:
	يختصر replaceAll؛
تم
ئعلن نصية.قللمبداية () ك نصية:
	يختصر trimStart؛
تم
ئعلن نصية.ردقطعة (عدد بداية، عدد نهاية = عدم) ك نصية:
	يختصر substring؛
تم
ئعلن نصية.قللمنهاية () ك نصية:
	يختصر trimEnd؛
تم
ئعلن نصية.طابقكل (رجكس رجك) ك مصفوفة[]:
	يختصر matchAll؛
تم
ئورد String من '//'؛
ئورد atob من '//'؛
ئورد btoa من '//'؛
ئورد عدد من ئساسية.عدد؛
ئورد مصفوفة من ئساسية.مصفوفة؛
ئورد منطق من ئساسية.منطق؛
ئورد رجكس من ئساسية.رجكس؛
ئعلن نصية.يبدئب (نصية بحت، عدد موضع = 0) ك منطق:
	يختصر startsWith؛
تم
ئعلن نصية.رممز64 () ك نصية:
	ئرجع btoa(هدا)؛
تم
ئعلن نصية.عووض (نصية مستبدل، نصية بديل) ك نصية:
	يختصر replace؛
تم
ئعلن نصية.عووضرجكس (رجكس مستبدل، نصية بديل) ك نصية:
	يختصر replace؛
تم
ئعلن نصية.كرر (عدد كم) ك نصية:
	يختصر repeat؛
تم
ئعلن نصية.ئلاحرفصغير () ك نصية:
	يختصر toLowerCase؛
تم
ئعلن نصية.ردئاخرموضع (منوع عنصربحت، عدد ئبدئمن = 0) ك عدد:
	يختصر lastIndexOf؛
تم
ئعلن نصية.ئلصق (نصية حف) ك نصية:
	يختصر concat؛
تم
ئعلن نصية.يتضمن (منوع عنصربحت، عدد ئبدئمن = 0) ك منطق:
	يختصر includes؛
تم
ئعلن نصية.حرففي (عدد موضع = 0) ك نصية:
	يختصر charAt؛
تم
ئعلن نصية.ينتهيب (نصية بحت، عدد موضعنهاية = عدم) ك منطق:
	يختصر endsWith؛
تم
ئعلن نصية.ئحشبداية (عدد طولهدف، نصية نصحشو = ' ') ك نصية:
	يختصر padStart؛
تم
ئعلن نصية.ئبحت (رجكس بحت) ك عدد:
	يختصر search؛
تم
ئعلن نصية.ردرمزحرف (عدد موضع) ك عدد:
	يختصر charCodeAt؛
تم
ئعلن نصية.فكترميز64 () ك نصية:
	ئرجع atob(هدا)؛
تم
ئعلن نصية.قططع (عدد بداية = عدم، عدد نهاية = عدم) ك نصية:
	يختصر slice؛
تم