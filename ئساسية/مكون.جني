ئعلن مكون (تعداد م_نوع [مستقل، تابع] = 'تابع'، تعداد م_نمط [مفتوح، مغلق] = 'مفتوح'):
	يمدد عنصرئشتمل()؛
	
	يملك مركب {...} حالة؛
	
	يملك تعداد نوع [مستقل، تابع]؛
	يملك تعداد نمط [مفتوح، مغلق]؛ 

	يملك عنصرئشتمل _دوم_حالي = عدم؛
	يملك جدرمخفي جدره؛

	ئدا هدا.لهخاصية('معرف'):
		نصية معف = هدا.ردخاصية('معرف')؛
		هدا.خدخاصية('id'، معف)؛
		هدا['id'] = معف؛
		هدا.معرف = معف؛
	تم
	
	ئدا هدا.لهخاصية('صنف'):
		نصية صنفه = هدا.ردخاصية('صنف')؛
		هدا.خدخاصية('class'، صنفه)؛
	تم
	
	هدا.نوع = م_نوع؛
	هدا.نمط = م_نمط؛
		
	ئدا هدا.نوع == 'مستقل':
		هدا.جدره = هدا.ئربطدوممخفي({
			نمط: هدا.نمط
		})؛
	تم
تم
ئعلن مكون._صييرمشهد ():
	نصية داخله = هدا.ئشتملداخلي.قللم()؛
	ئدا هدا.نوع == 'مستقل':
		هدا.جدره.عووضبنين(هدا._دوم_حالي.عقداتبنين ك عنصر[])؛
		#دع جدره = هدا.جدره؛
		#جدره['replaceChildren'](...هدا._دوم_حالي.عقداتبنين)؛
		هدا._دوم_حالي = هدا.جدره ك عنصرئشتمل؛
	وئلا:
		عنصر حالته = هدا.ئستعلم((<حالة>))؛
		عنصر حالتج = هدا._دوم_حالي.ئستعلم((<حالة>))؛
		# في حال وجود وسمة <حالة> فيقتصر التحديت علا عنصرينها فقط
		ئدا حالته وو حالتج:
			حالته.ئشتملداخلي = حالتج.ئشتملداخلي؛
		وئلا:
			#هدا['replaceChildren'](...هدا._دوم_حالي.عقداتبنين)؛
			هدا.عووضبنين(هدا._دوم_حالي.عقداتبنين ك عنصر[])؛
		تم
		هدا._دوم_حالي = هدا ك عنصرئشتمل ؛
		عنصر فجوة = هدا.ئستعلم((<فجوة>))؛
		ئدا فجوة:
			فجوة.ئشتملخارجي = داخله؛
		تم
	تم
تم
ئعلن مكون.حددتمشهد ():
	#حفض شجرة الدوم الجديد
	عنصر دوم = المستند.ئنشئعنصر('div')؛
	دوم.ئشتملداخلي = هدا.صيير()؛
	هدا._دوم_حالي = دوم ك عنصرئشتمل؛
	هدا._صييرمشهد()؛
تم
ئعلن مكون.disconnectedCallback ():
	هدا.ئخلي()؛
تم
ئعلن مكون.حممل ():
	هدا.ئربطحدتين()؛
تم
ئعلن مكون.صيير () ك نصية:
	ئرجع (
		<فجوة></فجوة>
	)؛
تم
ئعلن مكون.ئربطحدتين ():
	نصية[] حدتين = ['عندنقر'، 'عندتغيير'، 'عندتركمفتاح']؛
	لكل ئسمحدت في حدتين:
		عنصر[] عنصرعندحدت = هدا.ئستعلمكل("[%{ئسمحدت}]")؛
		لكل عنصحدت في عنصرعندحدت:
			نصية ئسموضيفة = عنصحدت.ردخاصية(ئسمحدت)؛
			وضيفة وضيفتحدت = هدا[ئسموضيفة] ك وضيفة؛
			ئدا وضيفتحدت: #وضيفة موجودة للحدت ئسمحدت
				نصية ئسمحد = ئسمحدت.عووض('عند'، '')؛
				عنصحدت.ئضفمستمعحدت(ئسمحد، وضيفتحدت.ئربط(هدا، [عنصحدت]))؛
			تم
		تم
	تم
تم
ئورد عدد من ئساسية.عدد؛
ئورد نصية من ئساسية.نصية؛
ئورد منطق من ئساسية.منطق؛
ئورد مصفوفة من ئساسية.مصفوفة؛
ئورد نوعمركب من ئساسية.نوعمركب؛
ئورد نوعتعداد من ئساسية.نوعتعداد؛
ئورد عنصرئشتمل من ئساسية.عنصرئشتمل؛
ئورد عنصرمخصص من ئساسية.عنصرمخصص؛
ئورد عنصر من ئساسية.عنصر؛
ئورد المستند من ئساسية.مستند؛
ئورد نافدة من ئساسية.نافدة؛
ئورد جدرمخفي من ئساسية.جدرمخفي؛
ئورد وضيفة؛
ئورد مفتاحين من ئساسية.نوعمركب؛
ئعلن مكون.ئخلي ():

تم
ئعلن مكون.خدحالة (مركب _حالة):
	ئدا _حالة:
		منطق تمتعديل = خطئ؛
		لكل مفت في مفتاحين(هدا.حالة):
			ئدا مفت في _حالة:
				هدا.حالة[مفت] = _حالة[مفت]؛
				تمتعديل = صحيح؛
			تم
		تم
		ئدا تمتعديل:
			هدا.حددت()؛
		تم
	تم
تم
ئعلن مكون.ردحالة () ك نوعمركب:
	ئرجع هدا.حالة؛
تم
ئعلن مدخل ():
	عنصرمخصص.سججل('مكون'، مكون)؛
تم
ئعلن مكون.يرقب () ك نصية[]:
	ئرجع [] ك نصية؛
تم
ئعلن مكون.حددتخاصية (ئسم، قديم، جديد):

تم
ئعلن مكون.attributeChangedCallback (ئسم، قديم، جديد):
	هدا.حددتخاصية(ئسم، قديم، جديد)؛
تم
ئعلن مكون.connectedCallback ():
	هدا.حددتمشهد()؛
	هدا.حممل()؛
تم
ئعلن مكون.حددت ():
	هدا.حددتمشهد()؛
	هدا.ئربطحدتين()؛
تم